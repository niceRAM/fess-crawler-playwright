name: Java CI with Maven

on:
  push:
    branches:
      - "*custom*"
  pull_request:
    branches:
      - "*custom*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Install Playwright
        run: npx playwright install --with-deps
      - name: Build with Maven
        run: mvn -B source:jar javadoc:jar package --file pom.xml -Dmaven.test.skip

      - name: Find JAR file
        id: find_jar
        run: |
            JAR_FILE=$(find target -name "*.jar" -not -name "*-sources.jar" -not -name "*-javadoc.jar")
            echo "::set-output name=jar_path::$JAR_FILE"
        
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: ${{ steps.find_jar.outputs.jar_path }}
          
  release:
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/') && contains(github.ref_name, 'custom')
    runs-on: ubuntu-latest
    
    steps:
    - name: Download JAR Artifact
      uses: actions/download-artifact@v3
      with:
        name: package
        path: packages/artifact.jar

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          自动生成 Release!
        draft: false
        prerelease: true

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path:  packages/artifact.jar
        asset_name:  ${{ github.ref_name }}.jar
        asset_content_type: application/java-archive